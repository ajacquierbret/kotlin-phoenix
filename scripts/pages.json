[{"name":"CLOSE(\"phx_close\")","description":"io.github.ajacquierbret.kotlinphoenix.client.Channel.Event.CLOSE","location":"kotlinphoenix-client/io.github.ajacquierbret.kotlinphoenix.client/-channel/-event/-c-l-o-s-e/index.html","searchKeys":["CLOSE","CLOSE(\"phx_close\")","io.github.ajacquierbret.kotlinphoenix.client.Channel.Event.CLOSE"]},{"name":"CLOSED()","description":"io.github.ajacquierbret.kotlinphoenix.client.Channel.State.CLOSED","location":"kotlinphoenix-client/io.github.ajacquierbret.kotlinphoenix.client/-channel/-state/-c-l-o-s-e-d/index.html","searchKeys":["CLOSED","CLOSED()","io.github.ajacquierbret.kotlinphoenix.client.Channel.State.CLOSED"]},{"name":"CLOSED()","description":"io.github.ajacquierbret.kotlinphoenix.client.Transport.ReadyState.CLOSED","location":"kotlinphoenix-client/io.github.ajacquierbret.kotlinphoenix.client/-transport/-ready-state/-c-l-o-s-e-d/index.html","searchKeys":["CLOSED","CLOSED()","io.github.ajacquierbret.kotlinphoenix.client.Transport.ReadyState.CLOSED"]},{"name":"CLOSING()","description":"io.github.ajacquierbret.kotlinphoenix.client.Transport.ReadyState.CLOSING","location":"kotlinphoenix-client/io.github.ajacquierbret.kotlinphoenix.client/-transport/-ready-state/-c-l-o-s-i-n-g/index.html","searchKeys":["CLOSING","CLOSING()","io.github.ajacquierbret.kotlinphoenix.client.Transport.ReadyState.CLOSING"]},{"name":"CONNECTING()","description":"io.github.ajacquierbret.kotlinphoenix.client.Transport.ReadyState.CONNECTING","location":"kotlinphoenix-client/io.github.ajacquierbret.kotlinphoenix.client/-transport/-ready-state/-c-o-n-n-e-c-t-i-n-g/index.html","searchKeys":["CONNECTING","CONNECTING()","io.github.ajacquierbret.kotlinphoenix.client.Transport.ReadyState.CONNECTING"]},{"name":"DIFF()","description":"io.github.ajacquierbret.kotlinphoenix.client.Presence.Events.DIFF","location":"kotlinphoenix-client/io.github.ajacquierbret.kotlinphoenix.client/-presence/-events/-d-i-f-f/index.html","searchKeys":["DIFF","DIFF()","io.github.ajacquierbret.kotlinphoenix.client.Presence.Events.DIFF"]},{"name":"ERROR(\"phx_error\")","description":"io.github.ajacquierbret.kotlinphoenix.client.Channel.Event.ERROR","location":"kotlinphoenix-client/io.github.ajacquierbret.kotlinphoenix.client/-channel/-event/-e-r-r-o-r/index.html","searchKeys":["ERROR","ERROR(\"phx_error\")","io.github.ajacquierbret.kotlinphoenix.client.Channel.Event.ERROR"]},{"name":"ERRORED()","description":"io.github.ajacquierbret.kotlinphoenix.client.Channel.State.ERRORED","location":"kotlinphoenix-client/io.github.ajacquierbret.kotlinphoenix.client/-channel/-state/-e-r-r-o-r-e-d/index.html","searchKeys":["ERRORED","ERRORED()","io.github.ajacquierbret.kotlinphoenix.client.Channel.State.ERRORED"]},{"name":"HEARTBEAT(\"heartbeat\")","description":"io.github.ajacquierbret.kotlinphoenix.client.Channel.Event.HEARTBEAT","location":"kotlinphoenix-client/io.github.ajacquierbret.kotlinphoenix.client/-channel/-event/-h-e-a-r-t-b-e-a-t/index.html","searchKeys":["HEARTBEAT","HEARTBEAT(\"heartbeat\")","io.github.ajacquierbret.kotlinphoenix.client.Channel.Event.HEARTBEAT"]},{"name":"JOIN(\"phx_join\")","description":"io.github.ajacquierbret.kotlinphoenix.client.Channel.Event.JOIN","location":"kotlinphoenix-client/io.github.ajacquierbret.kotlinphoenix.client/-channel/-event/-j-o-i-n/index.html","searchKeys":["JOIN","JOIN(\"phx_join\")","io.github.ajacquierbret.kotlinphoenix.client.Channel.Event.JOIN"]},{"name":"JOINED()","description":"io.github.ajacquierbret.kotlinphoenix.client.Channel.State.JOINED","location":"kotlinphoenix-client/io.github.ajacquierbret.kotlinphoenix.client/-channel/-state/-j-o-i-n-e-d/index.html","searchKeys":["JOINED","JOINED()","io.github.ajacquierbret.kotlinphoenix.client.Channel.State.JOINED"]},{"name":"JOINING()","description":"io.github.ajacquierbret.kotlinphoenix.client.Channel.State.JOINING","location":"kotlinphoenix-client/io.github.ajacquierbret.kotlinphoenix.client/-channel/-state/-j-o-i-n-i-n-g/index.html","searchKeys":["JOINING","JOINING()","io.github.ajacquierbret.kotlinphoenix.client.Channel.State.JOINING"]},{"name":"LEAVE(\"phx_leave\")","description":"io.github.ajacquierbret.kotlinphoenix.client.Channel.Event.LEAVE","location":"kotlinphoenix-client/io.github.ajacquierbret.kotlinphoenix.client/-channel/-event/-l-e-a-v-e/index.html","searchKeys":["LEAVE","LEAVE(\"phx_leave\")","io.github.ajacquierbret.kotlinphoenix.client.Channel.Event.LEAVE"]},{"name":"LEAVING()","description":"io.github.ajacquierbret.kotlinphoenix.client.Channel.State.LEAVING","location":"kotlinphoenix-client/io.github.ajacquierbret.kotlinphoenix.client/-channel/-state/-l-e-a-v-i-n-g/index.html","searchKeys":["LEAVING","LEAVING()","io.github.ajacquierbret.kotlinphoenix.client.Channel.State.LEAVING"]},{"name":"OPEN()","description":"io.github.ajacquierbret.kotlinphoenix.client.Transport.ReadyState.OPEN","location":"kotlinphoenix-client/io.github.ajacquierbret.kotlinphoenix.client/-transport/-ready-state/-o-p-e-n/index.html","searchKeys":["OPEN","OPEN()","io.github.ajacquierbret.kotlinphoenix.client.Transport.ReadyState.OPEN"]},{"name":"REPLY(\"phx_reply\")","description":"io.github.ajacquierbret.kotlinphoenix.client.Channel.Event.REPLY","location":"kotlinphoenix-client/io.github.ajacquierbret.kotlinphoenix.client/-channel/-event/-r-e-p-l-y/index.html","searchKeys":["REPLY","REPLY(\"phx_reply\")","io.github.ajacquierbret.kotlinphoenix.client.Channel.Event.REPLY"]},{"name":"STATE()","description":"io.github.ajacquierbret.kotlinphoenix.client.Presence.Events.STATE","location":"kotlinphoenix-client/io.github.ajacquierbret.kotlinphoenix.client/-presence/-events/-s-t-a-t-e/index.html","searchKeys":["STATE","STATE()","io.github.ajacquierbret.kotlinphoenix.client.Presence.Events.STATE"]},{"name":"abstract class SocketCommon(params: PayloadClosure, vsn: String, encode: EncodeClosure, decode: DecodeClosure, scope: CoroutineScope)","description":"io.github.ajacquierbret.kotlinphoenix.client.SocketCommon","location":"kotlinphoenix-client/io.github.ajacquierbret.kotlinphoenix.client/-socket-common/index.html","searchKeys":["SocketCommon","abstract class SocketCommon(params: PayloadClosure, vsn: String, encode: EncodeClosure, decode: DecodeClosure, scope: CoroutineScope)","io.github.ajacquierbret.kotlinphoenix.client.SocketCommon"]},{"name":"abstract class WebSocketTransportCommon : Transport","description":"io.github.ajacquierbret.kotlinphoenix.client.WebSocketTransportCommon","location":"kotlinphoenix-client/io.github.ajacquierbret.kotlinphoenix.client/-web-socket-transport-common/index.html","searchKeys":["WebSocketTransportCommon","abstract class WebSocketTransportCommon : Transport","io.github.ajacquierbret.kotlinphoenix.client.WebSocketTransportCommon"]},{"name":"abstract fun connect(): SocketFlow","description":"io.github.ajacquierbret.kotlinphoenix.client.Transport.connect","location":"kotlinphoenix-client/io.github.ajacquierbret.kotlinphoenix.client/-transport/connect.html","searchKeys":["connect","abstract fun connect(): SocketFlow","io.github.ajacquierbret.kotlinphoenix.client.Transport.connect"]},{"name":"abstract fun disconnect(code: Int, reason: String? = null)","description":"io.github.ajacquierbret.kotlinphoenix.client.Transport.disconnect","location":"kotlinphoenix-client/io.github.ajacquierbret.kotlinphoenix.client/-transport/disconnect.html","searchKeys":["disconnect","abstract fun disconnect(code: Int, reason: String? = null)","io.github.ajacquierbret.kotlinphoenix.client.Transport.disconnect"]},{"name":"abstract fun send(data: String)","description":"io.github.ajacquierbret.kotlinphoenix.client.Transport.send","location":"kotlinphoenix-client/io.github.ajacquierbret.kotlinphoenix.client/-transport/send.html","searchKeys":["send","abstract fun send(data: String)","io.github.ajacquierbret.kotlinphoenix.client.Transport.send"]},{"name":"abstract val protocol: String","description":"io.github.ajacquierbret.kotlinphoenix.client.SocketCommon.protocol","location":"kotlinphoenix-client/io.github.ajacquierbret.kotlinphoenix.client/-socket-common/protocol.html","searchKeys":["protocol","abstract val protocol: String","io.github.ajacquierbret.kotlinphoenix.client.SocketCommon.protocol"]},{"name":"abstract val readyState: Transport.ReadyState","description":"io.github.ajacquierbret.kotlinphoenix.client.Transport.readyState","location":"kotlinphoenix-client/io.github.ajacquierbret.kotlinphoenix.client/-transport/ready-state.html","searchKeys":["readyState","abstract val readyState: Transport.ReadyState","io.github.ajacquierbret.kotlinphoenix.client.Transport.readyState"]},{"name":"abstract var endpoint: String","description":"io.github.ajacquierbret.kotlinphoenix.client.SocketCommon.endpoint","location":"kotlinphoenix-client/io.github.ajacquierbret.kotlinphoenix.client/-socket-common/endpoint.html","searchKeys":["endpoint","abstract var endpoint: String","io.github.ajacquierbret.kotlinphoenix.client.SocketCommon.endpoint"]},{"name":"abstract var endpointUrl: URL","description":"io.github.ajacquierbret.kotlinphoenix.client.SocketCommon.endpointUrl","location":"kotlinphoenix-client/io.github.ajacquierbret.kotlinphoenix.client/-socket-common/endpoint-url.html","searchKeys":["endpointUrl","abstract var endpointUrl: URL","io.github.ajacquierbret.kotlinphoenix.client.SocketCommon.endpointUrl"]},{"name":"class Channel(topic: String, params: Payload, socket: Socket, socketFlow: SocketFlow, scope: CoroutineScope) : SharedFlow<Message> ","description":"io.github.ajacquierbret.kotlinphoenix.client.Channel","location":"kotlinphoenix-client/io.github.ajacquierbret.kotlinphoenix.client/-channel/index.html","searchKeys":["Channel","class Channel(topic: String, params: Payload, socket: Socket, socketFlow: SocketFlow, scope: CoroutineScope) : SharedFlow<Message> ","io.github.ajacquierbret.kotlinphoenix.client.Channel"]},{"name":"class Presence(channel: Channel, scope: CoroutineScope, opts: Presence.Options)","description":"io.github.ajacquierbret.kotlinphoenix.client.Presence","location":"kotlinphoenix-client/io.github.ajacquierbret.kotlinphoenix.client/-presence/index.html","searchKeys":["Presence","class Presence(channel: Channel, scope: CoroutineScope, opts: Presence.Options)","io.github.ajacquierbret.kotlinphoenix.client.Presence"]},{"name":"class Push(channel: Channel, event: String, payload: Payload, timeout: Long, scope: CoroutineScope) : SharedFlow<Message> ","description":"io.github.ajacquierbret.kotlinphoenix.client.Push","location":"kotlinphoenix-client/io.github.ajacquierbret.kotlinphoenix.client/-push/index.html","searchKeys":["Push","class Push(channel: Channel, event: String, payload: Payload, timeout: Long, scope: CoroutineScope) : SharedFlow<Message> ","io.github.ajacquierbret.kotlinphoenix.client.Push"]},{"name":"class TimeoutTimer(timerCalculation: (tries: Int) -> Long, scope: CoroutineScope)","description":"io.github.ajacquierbret.kotlinphoenix.client.TimeoutTimer","location":"kotlinphoenix-client/io.github.ajacquierbret.kotlinphoenix.client/-timeout-timer/index.html","searchKeys":["TimeoutTimer","class TimeoutTimer(timerCalculation: (tries: Int) -> Long, scope: CoroutineScope)","io.github.ajacquierbret.kotlinphoenix.client.TimeoutTimer"]},{"name":"const val HEARTBEAT: Long","description":"io.github.ajacquierbret.kotlinphoenix.client.Defaults.HEARTBEAT","location":"kotlinphoenix-client/io.github.ajacquierbret.kotlinphoenix.client/-defaults/-h-e-a-r-t-b-e-a-t.html","searchKeys":["HEARTBEAT","const val HEARTBEAT: Long","io.github.ajacquierbret.kotlinphoenix.client.Defaults.HEARTBEAT"]},{"name":"const val TIMEOUT: Long","description":"io.github.ajacquierbret.kotlinphoenix.client.Defaults.TIMEOUT","location":"kotlinphoenix-client/io.github.ajacquierbret.kotlinphoenix.client/-defaults/-t-i-m-e-o-u-t.html","searchKeys":["TIMEOUT","const val TIMEOUT: Long","io.github.ajacquierbret.kotlinphoenix.client.Defaults.TIMEOUT"]},{"name":"const val VSN: String","description":"io.github.ajacquierbret.kotlinphoenix.client.Defaults.VSN","location":"kotlinphoenix-client/io.github.ajacquierbret.kotlinphoenix.client/-defaults/-v-s-n.html","searchKeys":["VSN","const val VSN: String","io.github.ajacquierbret.kotlinphoenix.client.Defaults.VSN"]},{"name":"const val WS_CLOSE_ABNORMAL: Int = 1006","description":"io.github.ajacquierbret.kotlinphoenix.client.WS_CLOSE_ABNORMAL","location":"kotlinphoenix-client/io.github.ajacquierbret.kotlinphoenix.client/-w-s_-c-l-o-s-e_-a-b-n-o-r-m-a-l.html","searchKeys":["WS_CLOSE_ABNORMAL","const val WS_CLOSE_ABNORMAL: Int = 1006","io.github.ajacquierbret.kotlinphoenix.client.WS_CLOSE_ABNORMAL"]},{"name":"const val WS_CLOSE_NORMAL: Int = 1000","description":"io.github.ajacquierbret.kotlinphoenix.client.WS_CLOSE_NORMAL","location":"kotlinphoenix-client/io.github.ajacquierbret.kotlinphoenix.client/-w-s_-c-l-o-s-e_-n-o-r-m-a-l.html","searchKeys":["WS_CLOSE_NORMAL","const val WS_CLOSE_NORMAL: Int = 1000","io.github.ajacquierbret.kotlinphoenix.client.WS_CLOSE_NORMAL"]},{"name":"data class Caller(onJoin: OnJoin, onLeave: OnLeave, onSync: OnSync)","description":"io.github.ajacquierbret.kotlinphoenix.client.Presence.Caller","location":"kotlinphoenix-client/io.github.ajacquierbret.kotlinphoenix.client/-presence/-caller/index.html","searchKeys":["Caller","data class Caller(onJoin: OnJoin, onLeave: OnLeave, onSync: OnSync)","io.github.ajacquierbret.kotlinphoenix.client.Presence.Caller"]},{"name":"data class CloseEvent(code: Int) : SocketEvent","description":"io.github.ajacquierbret.kotlinphoenix.client.SocketEvent.CloseEvent","location":"kotlinphoenix-client/io.github.ajacquierbret.kotlinphoenix.client/-socket-event/-close-event/index.html","searchKeys":["CloseEvent","data class CloseEvent(code: Int) : SocketEvent","io.github.ajacquierbret.kotlinphoenix.client.SocketEvent.CloseEvent"]},{"name":"data class FailureEvent(throwable: Throwable, response: Any?) : SocketEvent","description":"io.github.ajacquierbret.kotlinphoenix.client.SocketEvent.FailureEvent","location":"kotlinphoenix-client/io.github.ajacquierbret.kotlinphoenix.client/-socket-event/-failure-event/index.html","searchKeys":["FailureEvent","data class FailureEvent(throwable: Throwable, response: Any?) : SocketEvent","io.github.ajacquierbret.kotlinphoenix.client.SocketEvent.FailureEvent"]},{"name":"data class Message(joinRef: String?, ref: String, topic: String, event: String, rawPayload: Payload)","description":"io.github.ajacquierbret.kotlinphoenix.client.Message","location":"kotlinphoenix-client/io.github.ajacquierbret.kotlinphoenix.client/-message/index.html","searchKeys":["Message","data class Message(joinRef: String?, ref: String, topic: String, event: String, rawPayload: Payload)","io.github.ajacquierbret.kotlinphoenix.client.Message"]},{"name":"data class MessageEvent(text: Message) : SocketEvent","description":"io.github.ajacquierbret.kotlinphoenix.client.SocketEvent.MessageEvent","location":"kotlinphoenix-client/io.github.ajacquierbret.kotlinphoenix.client/-socket-event/-message-event/index.html","searchKeys":["MessageEvent","data class MessageEvent(text: Message) : SocketEvent","io.github.ajacquierbret.kotlinphoenix.client.SocketEvent.MessageEvent"]},{"name":"data class Options(events: Map<Presence.Events, String>)","description":"io.github.ajacquierbret.kotlinphoenix.client.Presence.Options","location":"kotlinphoenix-client/io.github.ajacquierbret.kotlinphoenix.client/-presence/-options/index.html","searchKeys":["Options","data class Options(events: Map<Presence.Events, String>)","io.github.ajacquierbret.kotlinphoenix.client.Presence.Options"]},{"name":"enum Event : Enum<Channel.Event> ","description":"io.github.ajacquierbret.kotlinphoenix.client.Channel.Event","location":"kotlinphoenix-client/io.github.ajacquierbret.kotlinphoenix.client/-channel/-event/index.html","searchKeys":["Event","enum Event : Enum<Channel.Event> ","io.github.ajacquierbret.kotlinphoenix.client.Channel.Event"]},{"name":"enum Events : Enum<Presence.Events> ","description":"io.github.ajacquierbret.kotlinphoenix.client.Presence.Events","location":"kotlinphoenix-client/io.github.ajacquierbret.kotlinphoenix.client/-presence/-events/index.html","searchKeys":["Events","enum Events : Enum<Presence.Events> ","io.github.ajacquierbret.kotlinphoenix.client.Presence.Events"]},{"name":"enum ReadyState : Enum<Transport.ReadyState> ","description":"io.github.ajacquierbret.kotlinphoenix.client.Transport.ReadyState","location":"kotlinphoenix-client/io.github.ajacquierbret.kotlinphoenix.client/-transport/-ready-state/index.html","searchKeys":["ReadyState","enum ReadyState : Enum<Transport.ReadyState> ","io.github.ajacquierbret.kotlinphoenix.client.Transport.ReadyState"]},{"name":"enum State : Enum<Channel.State> ","description":"io.github.ajacquierbret.kotlinphoenix.client.Channel.State","location":"kotlinphoenix-client/io.github.ajacquierbret.kotlinphoenix.client/-channel/-state/index.html","searchKeys":["State","enum State : Enum<Channel.State> ","io.github.ajacquierbret.kotlinphoenix.client.Channel.State"]},{"name":"expect class Socket(url: String, paramsClosure: PayloadClosure, vsn: String, encode: EncodeClosure, decode: DecodeClosure, scope: CoroutineScope) : SocketCommon","description":"io.github.ajacquierbret.kotlinphoenix.client.Socket","location":"kotlinphoenix-client/io.github.ajacquierbret.kotlinphoenix.client/-socket/index.html","searchKeys":["Socket","expect class Socket(url: String, paramsClosure: PayloadClosure, vsn: String, encode: EncodeClosure, decode: DecodeClosure, scope: CoroutineScope) : SocketCommon","io.github.ajacquierbret.kotlinphoenix.client.Socket"]},{"name":"expect class URL","description":"io.github.ajacquierbret.kotlinphoenix.client.URL","location":"kotlinphoenix-client/io.github.ajacquierbret.kotlinphoenix.client/-u-r-l/index.html","searchKeys":["URL","expect class URL","io.github.ajacquierbret.kotlinphoenix.client.URL"]},{"name":"expect class WebSocketTransport(url: URL, decode: DecodeClosure) : WebSocketTransportCommon","description":"io.github.ajacquierbret.kotlinphoenix.client.WebSocketTransport","location":"kotlinphoenix-client/io.github.ajacquierbret.kotlinphoenix.client/-web-socket-transport/index.html","searchKeys":["WebSocketTransport","expect class WebSocketTransport(url: URL, decode: DecodeClosure) : WebSocketTransportCommon","io.github.ajacquierbret.kotlinphoenix.client.WebSocketTransport"]},{"name":"expect fun Socket(url: String, params: Payload?, vsn: String = Defaults.VSN, encode: EncodeClosure = Defaults.encode, decode: DecodeClosure = Defaults.decode, scope: CoroutineScope)","description":"io.github.ajacquierbret.kotlinphoenix.client.Socket.Socket","location":"kotlinphoenix-client/io.github.ajacquierbret.kotlinphoenix.client/-socket/-socket.html","searchKeys":["Socket","expect fun Socket(url: String, params: Payload?, vsn: String = Defaults.VSN, encode: EncodeClosure = Defaults.encode, decode: DecodeClosure = Defaults.decode, scope: CoroutineScope)","io.github.ajacquierbret.kotlinphoenix.client.Socket.Socket"]},{"name":"expect fun Socket(url: String, paramsClosure: PayloadClosure, vsn: String = Defaults.VSN, encode: EncodeClosure = Defaults.encode, decode: DecodeClosure = Defaults.decode, scope: CoroutineScope)","description":"io.github.ajacquierbret.kotlinphoenix.client.Socket.Socket","location":"kotlinphoenix-client/io.github.ajacquierbret.kotlinphoenix.client/-socket/-socket.html","searchKeys":["Socket","expect fun Socket(url: String, paramsClosure: PayloadClosure, vsn: String = Defaults.VSN, encode: EncodeClosure = Defaults.encode, decode: DecodeClosure = Defaults.decode, scope: CoroutineScope)","io.github.ajacquierbret.kotlinphoenix.client.Socket.Socket"]},{"name":"expect fun WebSocketTransport(url: URL, decode: DecodeClosure)","description":"io.github.ajacquierbret.kotlinphoenix.client.WebSocketTransport.WebSocketTransport","location":"kotlinphoenix-client/io.github.ajacquierbret.kotlinphoenix.client/-web-socket-transport/-web-socket-transport.html","searchKeys":["WebSocketTransport","expect fun WebSocketTransport(url: URL, decode: DecodeClosure)","io.github.ajacquierbret.kotlinphoenix.client.WebSocketTransport.WebSocketTransport"]},{"name":"expect object DefaultsPlatform","description":"io.github.ajacquierbret.kotlinphoenix.client.DefaultsPlatform","location":"kotlinphoenix-client/io.github.ajacquierbret.kotlinphoenix.client/-defaults-platform/index.html","searchKeys":["DefaultsPlatform","expect object DefaultsPlatform","io.github.ajacquierbret.kotlinphoenix.client.DefaultsPlatform"]},{"name":"expect val decode: DecodeClosure","description":"io.github.ajacquierbret.kotlinphoenix.client.WebSocketTransport.decode","location":"kotlinphoenix-client/io.github.ajacquierbret.kotlinphoenix.client/-web-socket-transport/decode.html","searchKeys":["decode","expect val decode: DecodeClosure","io.github.ajacquierbret.kotlinphoenix.client.WebSocketTransport.decode"]},{"name":"expect val url: URL","description":"io.github.ajacquierbret.kotlinphoenix.client.WebSocketTransport.url","location":"kotlinphoenix-client/io.github.ajacquierbret.kotlinphoenix.client/-web-socket-transport/url.html","searchKeys":["url","expect val url: URL","io.github.ajacquierbret.kotlinphoenix.client.WebSocketTransport.url"]},{"name":"fun <T> listBy(presence: PresenceState, transform: (Map.Entry<String, PresenceMap>) -> T): List<T>","description":"io.github.ajacquierbret.kotlinphoenix.client.Presence.Companion.listBy","location":"kotlinphoenix-client/io.github.ajacquierbret.kotlinphoenix.client/-presence/-companion/list-by.html","searchKeys":["listBy","fun <T> listBy(presence: PresenceState, transform: (Map.Entry<String, PresenceMap>) -> T): List<T>","io.github.ajacquierbret.kotlinphoenix.client.Presence.Companion.listBy"]},{"name":"fun Any?.toJsonElement(): JsonElement","description":"io.github.ajacquierbret.kotlinphoenix.client.toJsonElement","location":"kotlinphoenix-client/io.github.ajacquierbret.kotlinphoenix.client/to-json-element.html","searchKeys":["toJsonElement","fun Any?.toJsonElement(): JsonElement","io.github.ajacquierbret.kotlinphoenix.client.toJsonElement"]},{"name":"fun Caller(onJoin: OnJoin = { _, _, _ -> }, onLeave: OnLeave = { _, _, _ -> }, onSync: OnSync = {})","description":"io.github.ajacquierbret.kotlinphoenix.client.Presence.Caller.Caller","location":"kotlinphoenix-client/io.github.ajacquierbret.kotlinphoenix.client/-presence/-caller/-caller.html","searchKeys":["Caller","fun Caller(onJoin: OnJoin = { _, _, _ -> }, onLeave: OnLeave = { _, _, _ -> }, onSync: OnSync = {})","io.github.ajacquierbret.kotlinphoenix.client.Presence.Caller.Caller"]},{"name":"fun Channel(topic: String, params: Payload, socket: Socket, socketFlow: SocketFlow, scope: CoroutineScope)","description":"io.github.ajacquierbret.kotlinphoenix.client.Channel.Channel","location":"kotlinphoenix-client/io.github.ajacquierbret.kotlinphoenix.client/-channel/-channel.html","searchKeys":["Channel","fun Channel(topic: String, params: Payload, socket: Socket, socketFlow: SocketFlow, scope: CoroutineScope)","io.github.ajacquierbret.kotlinphoenix.client.Channel.Channel"]},{"name":"fun CloseEvent(code: Int)","description":"io.github.ajacquierbret.kotlinphoenix.client.SocketEvent.CloseEvent.CloseEvent","location":"kotlinphoenix-client/io.github.ajacquierbret.kotlinphoenix.client/-socket-event/-close-event/-close-event.html","searchKeys":["CloseEvent","fun CloseEvent(code: Int)","io.github.ajacquierbret.kotlinphoenix.client.SocketEvent.CloseEvent.CloseEvent"]},{"name":"fun FailureEvent(throwable: Throwable, response: Any?)","description":"io.github.ajacquierbret.kotlinphoenix.client.SocketEvent.FailureEvent.FailureEvent","location":"kotlinphoenix-client/io.github.ajacquierbret.kotlinphoenix.client/-socket-event/-failure-event/-failure-event.html","searchKeys":["FailureEvent","fun FailureEvent(throwable: Throwable, response: Any?)","io.github.ajacquierbret.kotlinphoenix.client.SocketEvent.FailureEvent.FailureEvent"]},{"name":"fun JsonElement.toPrimitive(): Any?","description":"io.github.ajacquierbret.kotlinphoenix.client.toPrimitive","location":"kotlinphoenix-client/io.github.ajacquierbret.kotlinphoenix.client/to-primitive.html","searchKeys":["toPrimitive","fun JsonElement.toPrimitive(): Any?","io.github.ajacquierbret.kotlinphoenix.client.toPrimitive"]},{"name":"fun JsonObject.toPrimitiveMap(): Map<String, Any?>","description":"io.github.ajacquierbret.kotlinphoenix.client.toPrimitiveMap","location":"kotlinphoenix-client/io.github.ajacquierbret.kotlinphoenix.client/to-primitive-map.html","searchKeys":["toPrimitiveMap","fun JsonObject.toPrimitiveMap(): Map<String, Any?>","io.github.ajacquierbret.kotlinphoenix.client.toPrimitiveMap"]},{"name":"fun List<*>.toJsonArray(): JsonArray","description":"io.github.ajacquierbret.kotlinphoenix.client.toJsonArray","location":"kotlinphoenix-client/io.github.ajacquierbret.kotlinphoenix.client/to-json-array.html","searchKeys":["toJsonArray","fun List<*>.toJsonArray(): JsonArray","io.github.ajacquierbret.kotlinphoenix.client.toJsonArray"]},{"name":"fun Map<*, *>.toJsonObject(): JsonObject","description":"io.github.ajacquierbret.kotlinphoenix.client.toJsonObject","location":"kotlinphoenix-client/io.github.ajacquierbret.kotlinphoenix.client/to-json-object.html","searchKeys":["toJsonObject","fun Map<*, *>.toJsonObject(): JsonObject","io.github.ajacquierbret.kotlinphoenix.client.toJsonObject"]},{"name":"fun Message(joinRef: String? = null, ref: String = \"\", topic: String = \"\", event: String = \"\", rawPayload: Payload = HashMap())","description":"io.github.ajacquierbret.kotlinphoenix.client.Message.Message","location":"kotlinphoenix-client/io.github.ajacquierbret.kotlinphoenix.client/-message/-message.html","searchKeys":["Message","fun Message(joinRef: String? = null, ref: String = \"\", topic: String = \"\", event: String = \"\", rawPayload: Payload = HashMap())","io.github.ajacquierbret.kotlinphoenix.client.Message.Message"]},{"name":"fun MessageEvent(text: Message)","description":"io.github.ajacquierbret.kotlinphoenix.client.SocketEvent.MessageEvent.MessageEvent","location":"kotlinphoenix-client/io.github.ajacquierbret.kotlinphoenix.client/-socket-event/-message-event/-message-event.html","searchKeys":["MessageEvent","fun MessageEvent(text: Message)","io.github.ajacquierbret.kotlinphoenix.client.SocketEvent.MessageEvent.MessageEvent"]},{"name":"fun Options(events: Map<Presence.Events, String>)","description":"io.github.ajacquierbret.kotlinphoenix.client.Presence.Options.Options","location":"kotlinphoenix-client/io.github.ajacquierbret.kotlinphoenix.client/-presence/-options/-options.html","searchKeys":["Options","fun Options(events: Map<Presence.Events, String>)","io.github.ajacquierbret.kotlinphoenix.client.Presence.Options.Options"]},{"name":"fun Presence(channel: Channel, scope: CoroutineScope, opts: Presence.Options = Options.defaults)","description":"io.github.ajacquierbret.kotlinphoenix.client.Presence.Presence","location":"kotlinphoenix-client/io.github.ajacquierbret.kotlinphoenix.client/-presence/-presence.html","searchKeys":["Presence","fun Presence(channel: Channel, scope: CoroutineScope, opts: Presence.Options = Options.defaults)","io.github.ajacquierbret.kotlinphoenix.client.Presence.Presence"]},{"name":"fun Push(channel: Channel, event: String, payload: Payload = emptyMap(), timeout: Long = Defaults.TIMEOUT, scope: CoroutineScope)","description":"io.github.ajacquierbret.kotlinphoenix.client.Push.Push","location":"kotlinphoenix-client/io.github.ajacquierbret.kotlinphoenix.client/-push/-push.html","searchKeys":["Push","fun Push(channel: Channel, event: String, payload: Payload = emptyMap(), timeout: Long = Defaults.TIMEOUT, scope: CoroutineScope)","io.github.ajacquierbret.kotlinphoenix.client.Push.Push"]},{"name":"fun SocketCommon(params: PayloadClosure, vsn: String, encode: EncodeClosure, decode: DecodeClosure, scope: CoroutineScope)","description":"io.github.ajacquierbret.kotlinphoenix.client.SocketCommon.SocketCommon","location":"kotlinphoenix-client/io.github.ajacquierbret.kotlinphoenix.client/-socket-common/-socket-common.html","searchKeys":["SocketCommon","fun SocketCommon(params: PayloadClosure, vsn: String, encode: EncodeClosure, decode: DecodeClosure, scope: CoroutineScope)","io.github.ajacquierbret.kotlinphoenix.client.SocketCommon.SocketCommon"]},{"name":"fun TimeoutTimer(timerCalculation: (tries: Int) -> Long, scope: CoroutineScope)","description":"io.github.ajacquierbret.kotlinphoenix.client.TimeoutTimer.TimeoutTimer","location":"kotlinphoenix-client/io.github.ajacquierbret.kotlinphoenix.client/-timeout-timer/-timeout-timer.html","searchKeys":["TimeoutTimer","fun TimeoutTimer(timerCalculation: (tries: Int) -> Long, scope: CoroutineScope)","io.github.ajacquierbret.kotlinphoenix.client.TimeoutTimer.TimeoutTimer"]},{"name":"fun WebSocketTransportCommon()","description":"io.github.ajacquierbret.kotlinphoenix.client.WebSocketTransportCommon.WebSocketTransportCommon","location":"kotlinphoenix-client/io.github.ajacquierbret.kotlinphoenix.client/-web-socket-transport-common/-web-socket-transport-common.html","searchKeys":["WebSocketTransportCommon","fun WebSocketTransportCommon()","io.github.ajacquierbret.kotlinphoenix.client.WebSocketTransportCommon.WebSocketTransportCommon"]},{"name":"fun channel(topic: String, socket: SocketFlow, params: Payload = emptyMap()): Channel","description":"io.github.ajacquierbret.kotlinphoenix.client.SocketCommon.channel","location":"kotlinphoenix-client/io.github.ajacquierbret.kotlinphoenix.client/-socket-common/channel.html","searchKeys":["channel","fun channel(topic: String, socket: SocketFlow, params: Payload = emptyMap()): Channel","io.github.ajacquierbret.kotlinphoenix.client.SocketCommon.channel"]},{"name":"fun disconnect(code: Int = WS_CLOSE_NORMAL, reason: String? = null)","description":"io.github.ajacquierbret.kotlinphoenix.client.SocketCommon.disconnect","location":"kotlinphoenix-client/io.github.ajacquierbret.kotlinphoenix.client/-socket-common/disconnect.html","searchKeys":["disconnect","fun disconnect(code: Int = WS_CLOSE_NORMAL, reason: String? = null)","io.github.ajacquierbret.kotlinphoenix.client.SocketCommon.disconnect"]},{"name":"fun filter(presence: PresenceState, predicate: (Map.Entry<String, PresenceMap>) -> Boolean?): PresenceState","description":"io.github.ajacquierbret.kotlinphoenix.client.Presence.Companion.filter","location":"kotlinphoenix-client/io.github.ajacquierbret.kotlinphoenix.client/-presence/-companion/filter.html","searchKeys":["filter","fun filter(presence: PresenceState, predicate: (Map.Entry<String, PresenceMap>) -> Boolean?): PresenceState","io.github.ajacquierbret.kotlinphoenix.client.Presence.Companion.filter"]},{"name":"fun filterBy(predicate: (Map.Entry<String, PresenceMap>) -> Boolean?): PresenceState","description":"io.github.ajacquierbret.kotlinphoenix.client.Presence.filterBy","location":"kotlinphoenix-client/io.github.ajacquierbret.kotlinphoenix.client/-presence/filter-by.html","searchKeys":["filterBy","fun filterBy(predicate: (Map.Entry<String, PresenceMap>) -> Boolean?): PresenceState","io.github.ajacquierbret.kotlinphoenix.client.Presence.filterBy"]},{"name":"fun isLifecycleEvent(event: String): Boolean","description":"io.github.ajacquierbret.kotlinphoenix.client.Channel.Event.Companion.isLifecycleEvent","location":"kotlinphoenix-client/io.github.ajacquierbret.kotlinphoenix.client/-channel/-event/-companion/is-lifecycle-event.html","searchKeys":["isLifecycleEvent","fun isLifecycleEvent(event: String): Boolean","io.github.ajacquierbret.kotlinphoenix.client.Channel.Event.Companion.isLifecycleEvent"]},{"name":"fun list(): List<PresenceMap>","description":"io.github.ajacquierbret.kotlinphoenix.client.Presence.list","location":"kotlinphoenix-client/io.github.ajacquierbret.kotlinphoenix.client/-presence/list.html","searchKeys":["list","fun list(): List<PresenceMap>","io.github.ajacquierbret.kotlinphoenix.client.Presence.list"]},{"name":"fun onJoin(callback: OnJoin)","description":"io.github.ajacquierbret.kotlinphoenix.client.Presence.onJoin","location":"kotlinphoenix-client/io.github.ajacquierbret.kotlinphoenix.client/-presence/on-join.html","searchKeys":["onJoin","fun onJoin(callback: OnJoin)","io.github.ajacquierbret.kotlinphoenix.client.Presence.onJoin"]},{"name":"fun onLeave(callback: OnLeave)","description":"io.github.ajacquierbret.kotlinphoenix.client.Presence.onLeave","location":"kotlinphoenix-client/io.github.ajacquierbret.kotlinphoenix.client/-presence/on-leave.html","searchKeys":["onLeave","fun onLeave(callback: OnLeave)","io.github.ajacquierbret.kotlinphoenix.client.Presence.onLeave"]},{"name":"fun onSync(callback: OnSync)","description":"io.github.ajacquierbret.kotlinphoenix.client.Presence.onSync","location":"kotlinphoenix-client/io.github.ajacquierbret.kotlinphoenix.client/-presence/on-sync.html","searchKeys":["onSync","fun onSync(callback: OnSync)","io.github.ajacquierbret.kotlinphoenix.client.Presence.onSync"]},{"name":"fun remove(channel: Channel)","description":"io.github.ajacquierbret.kotlinphoenix.client.SocketCommon.remove","location":"kotlinphoenix-client/io.github.ajacquierbret.kotlinphoenix.client/-socket-common/remove.html","searchKeys":["remove","fun remove(channel: Channel)","io.github.ajacquierbret.kotlinphoenix.client.SocketCommon.remove"]},{"name":"fun reset()","description":"io.github.ajacquierbret.kotlinphoenix.client.TimeoutTimer.reset","location":"kotlinphoenix-client/io.github.ajacquierbret.kotlinphoenix.client/-timeout-timer/reset.html","searchKeys":["reset","fun reset()","io.github.ajacquierbret.kotlinphoenix.client.TimeoutTimer.reset"]},{"name":"fun scheduleTimeout(block: suspend CoroutineScope.() -> Unit)","description":"io.github.ajacquierbret.kotlinphoenix.client.TimeoutTimer.scheduleTimeout","location":"kotlinphoenix-client/io.github.ajacquierbret.kotlinphoenix.client/-timeout-timer/schedule-timeout.html","searchKeys":["scheduleTimeout","fun scheduleTimeout(block: suspend CoroutineScope.() -> Unit)","io.github.ajacquierbret.kotlinphoenix.client.TimeoutTimer.scheduleTimeout"]},{"name":"fun syncDiff(currentState: PresenceState, diff: PresenceDiff, onJoin: OnJoin = { _, _, _ -> }, onLeave: OnLeave = { _, _, _ -> }): PresenceState","description":"io.github.ajacquierbret.kotlinphoenix.client.Presence.Companion.syncDiff","location":"kotlinphoenix-client/io.github.ajacquierbret.kotlinphoenix.client/-presence/-companion/sync-diff.html","searchKeys":["syncDiff","fun syncDiff(currentState: PresenceState, diff: PresenceDiff, onJoin: OnJoin = { _, _, _ -> }, onLeave: OnLeave = { _, _, _ -> }): PresenceState","io.github.ajacquierbret.kotlinphoenix.client.Presence.Companion.syncDiff"]},{"name":"fun syncState(currentState: PresenceState, newState: PresenceState, onJoin: OnJoin = { _, _, _ -> }, onLeave: OnLeave = { _, _, _ -> }): PresenceState","description":"io.github.ajacquierbret.kotlinphoenix.client.Presence.Companion.syncState","location":"kotlinphoenix-client/io.github.ajacquierbret.kotlinphoenix.client/-presence/-companion/sync-state.html","searchKeys":["syncState","fun syncState(currentState: PresenceState, newState: PresenceState, onJoin: OnJoin = { _, _, _ -> }, onLeave: OnLeave = { _, _, _ -> }): PresenceState","io.github.ajacquierbret.kotlinphoenix.client.Presence.Companion.syncState"]},{"name":"interface Transport","description":"io.github.ajacquierbret.kotlinphoenix.client.Transport","location":"kotlinphoenix-client/io.github.ajacquierbret.kotlinphoenix.client/-transport/index.html","searchKeys":["Transport","interface Transport","io.github.ajacquierbret.kotlinphoenix.client.Transport"]},{"name":"object Companion","description":"io.github.ajacquierbret.kotlinphoenix.client.Channel.Event.Companion","location":"kotlinphoenix-client/io.github.ajacquierbret.kotlinphoenix.client/-channel/-event/-companion/index.html","searchKeys":["Companion","object Companion","io.github.ajacquierbret.kotlinphoenix.client.Channel.Event.Companion"]},{"name":"object Companion","description":"io.github.ajacquierbret.kotlinphoenix.client.Presence.Companion","location":"kotlinphoenix-client/io.github.ajacquierbret.kotlinphoenix.client/-presence/-companion/index.html","searchKeys":["Companion","object Companion","io.github.ajacquierbret.kotlinphoenix.client.Presence.Companion"]},{"name":"object Companion","description":"io.github.ajacquierbret.kotlinphoenix.client.Presence.Options.Companion","location":"kotlinphoenix-client/io.github.ajacquierbret.kotlinphoenix.client/-presence/-options/-companion/index.html","searchKeys":["Companion","object Companion","io.github.ajacquierbret.kotlinphoenix.client.Presence.Options.Companion"]},{"name":"object Defaults","description":"io.github.ajacquierbret.kotlinphoenix.client.Defaults","location":"kotlinphoenix-client/io.github.ajacquierbret.kotlinphoenix.client/-defaults/index.html","searchKeys":["Defaults","object Defaults","io.github.ajacquierbret.kotlinphoenix.client.Defaults"]},{"name":"object OpenEvent : SocketEvent","description":"io.github.ajacquierbret.kotlinphoenix.client.SocketEvent.OpenEvent","location":"kotlinphoenix-client/io.github.ajacquierbret.kotlinphoenix.client/-socket-event/-open-event/index.html","searchKeys":["OpenEvent","object OpenEvent : SocketEvent","io.github.ajacquierbret.kotlinphoenix.client.SocketEvent.OpenEvent"]},{"name":"open lateinit override var endpoint: String","description":"io.github.ajacquierbret.kotlinphoenix.client.Socket.endpoint","location":"kotlinphoenix-client/io.github.ajacquierbret.kotlinphoenix.client/-socket/[android]endpoint.html","searchKeys":["endpoint","open lateinit override var endpoint: String","io.github.ajacquierbret.kotlinphoenix.client.Socket.endpoint"]},{"name":"open lateinit override var endpoint: String","description":"io.github.ajacquierbret.kotlinphoenix.client.Socket.endpoint","location":"kotlinphoenix-client/io.github.ajacquierbret.kotlinphoenix.client/-socket/[ios]endpoint.html","searchKeys":["endpoint","open lateinit override var endpoint: String","io.github.ajacquierbret.kotlinphoenix.client.Socket.endpoint"]},{"name":"open lateinit override var endpointUrl: <ERROR CLASS>","description":"io.github.ajacquierbret.kotlinphoenix.client.Socket.endpointUrl","location":"kotlinphoenix-client/io.github.ajacquierbret.kotlinphoenix.client/-socket/[ios]endpoint-url.html","searchKeys":["endpointUrl","open lateinit override var endpointUrl: <ERROR CLASS>","io.github.ajacquierbret.kotlinphoenix.client.Socket.endpointUrl"]},{"name":"open lateinit override var endpointUrl: URL","description":"io.github.ajacquierbret.kotlinphoenix.client.Socket.endpointUrl","location":"kotlinphoenix-client/io.github.ajacquierbret.kotlinphoenix.client/-socket/[android]endpoint-url.html","searchKeys":["endpointUrl","open lateinit override var endpointUrl: URL","io.github.ajacquierbret.kotlinphoenix.client.Socket.endpointUrl"]},{"name":"open override fun connect(): SocketFlow","description":"io.github.ajacquierbret.kotlinphoenix.client.WebSocketTransport.connect","location":"kotlinphoenix-client/io.github.ajacquierbret.kotlinphoenix.client/-web-socket-transport/[android]connect.html","searchKeys":["connect","open override fun connect(): SocketFlow","io.github.ajacquierbret.kotlinphoenix.client.WebSocketTransport.connect"]},{"name":"open override fun connect(): SocketFlow","description":"io.github.ajacquierbret.kotlinphoenix.client.WebSocketTransport.connect","location":"kotlinphoenix-client/io.github.ajacquierbret.kotlinphoenix.client/-web-socket-transport/[ios]connect.html","searchKeys":["connect","open override fun connect(): SocketFlow","io.github.ajacquierbret.kotlinphoenix.client.WebSocketTransport.connect"]},{"name":"open override fun disconnect(code: Int, reason: String?)","description":"io.github.ajacquierbret.kotlinphoenix.client.WebSocketTransport.disconnect","location":"kotlinphoenix-client/io.github.ajacquierbret.kotlinphoenix.client/-web-socket-transport/[android]disconnect.html","searchKeys":["disconnect","open override fun disconnect(code: Int, reason: String?)","io.github.ajacquierbret.kotlinphoenix.client.WebSocketTransport.disconnect"]},{"name":"open override fun disconnect(code: Int, reason: String?)","description":"io.github.ajacquierbret.kotlinphoenix.client.WebSocketTransport.disconnect","location":"kotlinphoenix-client/io.github.ajacquierbret.kotlinphoenix.client/-web-socket-transport/[ios]disconnect.html","searchKeys":["disconnect","open override fun disconnect(code: Int, reason: String?)","io.github.ajacquierbret.kotlinphoenix.client.WebSocketTransport.disconnect"]},{"name":"open override fun send(data: String)","description":"io.github.ajacquierbret.kotlinphoenix.client.WebSocketTransport.send","location":"kotlinphoenix-client/io.github.ajacquierbret.kotlinphoenix.client/-web-socket-transport/[android]send.html","searchKeys":["send","open override fun send(data: String)","io.github.ajacquierbret.kotlinphoenix.client.WebSocketTransport.send"]},{"name":"open override fun send(data: String)","description":"io.github.ajacquierbret.kotlinphoenix.client.WebSocketTransport.send","location":"kotlinphoenix-client/io.github.ajacquierbret.kotlinphoenix.client/-web-socket-transport/[ios]send.html","searchKeys":["send","open override fun send(data: String)","io.github.ajacquierbret.kotlinphoenix.client.WebSocketTransport.send"]},{"name":"open override val protocol: String","description":"io.github.ajacquierbret.kotlinphoenix.client.Socket.protocol","location":"kotlinphoenix-client/io.github.ajacquierbret.kotlinphoenix.client/-socket/[android]protocol.html","searchKeys":["protocol","open override val protocol: String","io.github.ajacquierbret.kotlinphoenix.client.Socket.protocol"]},{"name":"open override val protocol: String","description":"io.github.ajacquierbret.kotlinphoenix.client.Socket.protocol","location":"kotlinphoenix-client/io.github.ajacquierbret.kotlinphoenix.client/-socket/[ios]protocol.html","searchKeys":["protocol","open override val protocol: String","io.github.ajacquierbret.kotlinphoenix.client.Socket.protocol"]},{"name":"open override val replayCache: List<Message>","description":"io.github.ajacquierbret.kotlinphoenix.client.Channel.replayCache","location":"kotlinphoenix-client/io.github.ajacquierbret.kotlinphoenix.client/-channel/replay-cache.html","searchKeys":["replayCache","open override val replayCache: List<Message>","io.github.ajacquierbret.kotlinphoenix.client.Channel.replayCache"]},{"name":"open override val replayCache: List<Message>","description":"io.github.ajacquierbret.kotlinphoenix.client.Push.replayCache","location":"kotlinphoenix-client/io.github.ajacquierbret.kotlinphoenix.client/-push/replay-cache.html","searchKeys":["replayCache","open override val replayCache: List<Message>","io.github.ajacquierbret.kotlinphoenix.client.Push.replayCache"]},{"name":"open override var readyState: Transport.ReadyState","description":"io.github.ajacquierbret.kotlinphoenix.client.WebSocketTransportCommon.readyState","location":"kotlinphoenix-client/io.github.ajacquierbret.kotlinphoenix.client/-web-socket-transport-common/ready-state.html","searchKeys":["readyState","open override var readyState: Transport.ReadyState","io.github.ajacquierbret.kotlinphoenix.client.WebSocketTransportCommon.readyState"]},{"name":"open suspend override fun collect(collector: FlowCollector<Message>): Nothing","description":"io.github.ajacquierbret.kotlinphoenix.client.Channel.collect","location":"kotlinphoenix-client/io.github.ajacquierbret.kotlinphoenix.client/-channel/collect.html","searchKeys":["collect","open suspend override fun collect(collector: FlowCollector<Message>): Nothing","io.github.ajacquierbret.kotlinphoenix.client.Channel.collect"]},{"name":"open suspend override fun collect(collector: FlowCollector<Message>): Nothing","description":"io.github.ajacquierbret.kotlinphoenix.client.Push.collect","location":"kotlinphoenix-client/io.github.ajacquierbret.kotlinphoenix.client/-push/collect.html","searchKeys":["collect","open suspend override fun collect(collector: FlowCollector<Message>): Nothing","io.github.ajacquierbret.kotlinphoenix.client.Push.collect"]},{"name":"sealed class SocketEvent : Throwable","description":"io.github.ajacquierbret.kotlinphoenix.client.SocketEvent","location":"kotlinphoenix-client/io.github.ajacquierbret.kotlinphoenix.client/-socket-event/index.html","searchKeys":["SocketEvent","sealed class SocketEvent : Throwable","io.github.ajacquierbret.kotlinphoenix.client.SocketEvent"]},{"name":"suspend fun connect(): SocketFlow?","description":"io.github.ajacquierbret.kotlinphoenix.client.SocketCommon.connect","location":"kotlinphoenix-client/io.github.ajacquierbret.kotlinphoenix.client/-socket-common/connect.html","searchKeys":["connect","suspend fun connect(): SocketFlow?","io.github.ajacquierbret.kotlinphoenix.client.SocketCommon.connect"]},{"name":"suspend fun emit(value: Message)","description":"io.github.ajacquierbret.kotlinphoenix.client.Push.emit","location":"kotlinphoenix-client/io.github.ajacquierbret.kotlinphoenix.client/-push/emit.html","searchKeys":["emit","suspend fun emit(value: Message)","io.github.ajacquierbret.kotlinphoenix.client.Push.emit"]},{"name":"suspend fun join(timeout: Long = this.timeout): Push","description":"io.github.ajacquierbret.kotlinphoenix.client.Channel.join","location":"kotlinphoenix-client/io.github.ajacquierbret.kotlinphoenix.client/-channel/join.html","searchKeys":["join","suspend fun join(timeout: Long = this.timeout): Push","io.github.ajacquierbret.kotlinphoenix.client.Channel.join"]},{"name":"suspend fun leave(timeout: Long = this.timeout): Push","description":"io.github.ajacquierbret.kotlinphoenix.client.Channel.leave","location":"kotlinphoenix-client/io.github.ajacquierbret.kotlinphoenix.client/-channel/leave.html","searchKeys":["leave","suspend fun leave(timeout: Long = this.timeout): Push","io.github.ajacquierbret.kotlinphoenix.client.Channel.leave"]},{"name":"suspend fun push(event: String, payload: Payload, timeout: Long = this.timeout): Push","description":"io.github.ajacquierbret.kotlinphoenix.client.Channel.push","location":"kotlinphoenix-client/io.github.ajacquierbret.kotlinphoenix.client/-channel/push.html","searchKeys":["push","suspend fun push(event: String, payload: Payload, timeout: Long = this.timeout): Push","io.github.ajacquierbret.kotlinphoenix.client.Channel.push"]},{"name":"suspend fun resend(timeout: Long = Defaults.TIMEOUT)","description":"io.github.ajacquierbret.kotlinphoenix.client.Push.resend","location":"kotlinphoenix-client/io.github.ajacquierbret.kotlinphoenix.client/-push/resend.html","searchKeys":["resend","suspend fun resend(timeout: Long = Defaults.TIMEOUT)","io.github.ajacquierbret.kotlinphoenix.client.Push.resend"]},{"name":"suspend fun send()","description":"io.github.ajacquierbret.kotlinphoenix.client.Push.send","location":"kotlinphoenix-client/io.github.ajacquierbret.kotlinphoenix.client/-push/send.html","searchKeys":["send","suspend fun send()","io.github.ajacquierbret.kotlinphoenix.client.Push.send"]},{"name":"val channel: Channel","description":"io.github.ajacquierbret.kotlinphoenix.client.Push.channel","location":"kotlinphoenix-client/io.github.ajacquierbret.kotlinphoenix.client/-push/channel.html","searchKeys":["channel","val channel: Channel","io.github.ajacquierbret.kotlinphoenix.client.Push.channel"]},{"name":"val code: Int","description":"io.github.ajacquierbret.kotlinphoenix.client.SocketEvent.CloseEvent.code","location":"kotlinphoenix-client/io.github.ajacquierbret.kotlinphoenix.client/-socket-event/-close-event/code.html","searchKeys":["code","val code: Int","io.github.ajacquierbret.kotlinphoenix.client.SocketEvent.CloseEvent.code"]},{"name":"val decode: DecodeClosure","description":"io.github.ajacquierbret.kotlinphoenix.client.Defaults.decode","location":"kotlinphoenix-client/io.github.ajacquierbret.kotlinphoenix.client/-defaults/decode.html","searchKeys":["decode","val decode: DecodeClosure","io.github.ajacquierbret.kotlinphoenix.client.Defaults.decode"]},{"name":"val defaults: Presence.Options","description":"io.github.ajacquierbret.kotlinphoenix.client.Presence.Options.Companion.defaults","location":"kotlinphoenix-client/io.github.ajacquierbret.kotlinphoenix.client/-presence/-options/-companion/defaults.html","searchKeys":["defaults","val defaults: Presence.Options","io.github.ajacquierbret.kotlinphoenix.client.Presence.Options.Companion.defaults"]},{"name":"val encode: EncodeClosure","description":"io.github.ajacquierbret.kotlinphoenix.client.Defaults.encode","location":"kotlinphoenix-client/io.github.ajacquierbret.kotlinphoenix.client/-defaults/encode.html","searchKeys":["encode","val encode: EncodeClosure","io.github.ajacquierbret.kotlinphoenix.client.Defaults.encode"]},{"name":"val event: String","description":"io.github.ajacquierbret.kotlinphoenix.client.Message.event","location":"kotlinphoenix-client/io.github.ajacquierbret.kotlinphoenix.client/-message/event.html","searchKeys":["event","val event: String","io.github.ajacquierbret.kotlinphoenix.client.Message.event"]},{"name":"val event: String","description":"io.github.ajacquierbret.kotlinphoenix.client.Push.event","location":"kotlinphoenix-client/io.github.ajacquierbret.kotlinphoenix.client/-push/event.html","searchKeys":["event","val event: String","io.github.ajacquierbret.kotlinphoenix.client.Push.event"]},{"name":"val events: Map<Presence.Events, String>","description":"io.github.ajacquierbret.kotlinphoenix.client.Presence.Options.events","location":"kotlinphoenix-client/io.github.ajacquierbret.kotlinphoenix.client/-presence/-options/events.html","searchKeys":["events","val events: Map<Presence.Events, String>","io.github.ajacquierbret.kotlinphoenix.client.Presence.Options.events"]},{"name":"val isClosed: Boolean","description":"io.github.ajacquierbret.kotlinphoenix.client.Channel.isClosed","location":"kotlinphoenix-client/io.github.ajacquierbret.kotlinphoenix.client/-channel/is-closed.html","searchKeys":["isClosed","val isClosed: Boolean","io.github.ajacquierbret.kotlinphoenix.client.Channel.isClosed"]},{"name":"val isConnected: Boolean","description":"io.github.ajacquierbret.kotlinphoenix.client.SocketCommon.isConnected","location":"kotlinphoenix-client/io.github.ajacquierbret.kotlinphoenix.client/-socket-common/is-connected.html","searchKeys":["isConnected","val isConnected: Boolean","io.github.ajacquierbret.kotlinphoenix.client.SocketCommon.isConnected"]},{"name":"val isErrored: Boolean","description":"io.github.ajacquierbret.kotlinphoenix.client.Channel.isErrored","location":"kotlinphoenix-client/io.github.ajacquierbret.kotlinphoenix.client/-channel/is-errored.html","searchKeys":["isErrored","val isErrored: Boolean","io.github.ajacquierbret.kotlinphoenix.client.Channel.isErrored"]},{"name":"val isJoined: Boolean","description":"io.github.ajacquierbret.kotlinphoenix.client.Channel.isJoined","location":"kotlinphoenix-client/io.github.ajacquierbret.kotlinphoenix.client/-channel/is-joined.html","searchKeys":["isJoined","val isJoined: Boolean","io.github.ajacquierbret.kotlinphoenix.client.Channel.isJoined"]},{"name":"val isJoining: Boolean","description":"io.github.ajacquierbret.kotlinphoenix.client.Channel.isJoining","location":"kotlinphoenix-client/io.github.ajacquierbret.kotlinphoenix.client/-channel/is-joining.html","searchKeys":["isJoining","val isJoining: Boolean","io.github.ajacquierbret.kotlinphoenix.client.Channel.isJoining"]},{"name":"val isLeaving: Boolean","description":"io.github.ajacquierbret.kotlinphoenix.client.Channel.isLeaving","location":"kotlinphoenix-client/io.github.ajacquierbret.kotlinphoenix.client/-channel/is-leaving.html","searchKeys":["isLeaving","val isLeaving: Boolean","io.github.ajacquierbret.kotlinphoenix.client.Channel.isLeaving"]},{"name":"val joinRef: String?","description":"io.github.ajacquierbret.kotlinphoenix.client.Channel.joinRef","location":"kotlinphoenix-client/io.github.ajacquierbret.kotlinphoenix.client/-channel/join-ref.html","searchKeys":["joinRef","val joinRef: String?","io.github.ajacquierbret.kotlinphoenix.client.Channel.joinRef"]},{"name":"val joinRef: String? = null","description":"io.github.ajacquierbret.kotlinphoenix.client.Message.joinRef","location":"kotlinphoenix-client/io.github.ajacquierbret.kotlinphoenix.client/-message/join-ref.html","searchKeys":["joinRef","val joinRef: String? = null","io.github.ajacquierbret.kotlinphoenix.client.Message.joinRef"]},{"name":"val payload: Payload","description":"io.github.ajacquierbret.kotlinphoenix.client.Message.payload","location":"kotlinphoenix-client/io.github.ajacquierbret.kotlinphoenix.client/-message/payload.html","searchKeys":["payload","val payload: Payload","io.github.ajacquierbret.kotlinphoenix.client.Message.payload"]},{"name":"val reconnectSteppedBackOff: (Int) -> Long","description":"io.github.ajacquierbret.kotlinphoenix.client.Defaults.reconnectSteppedBackOff","location":"kotlinphoenix-client/io.github.ajacquierbret.kotlinphoenix.client/-defaults/reconnect-stepped-back-off.html","searchKeys":["reconnectSteppedBackOff","val reconnectSteppedBackOff: (Int) -> Long","io.github.ajacquierbret.kotlinphoenix.client.Defaults.reconnectSteppedBackOff"]},{"name":"val ref: String","description":"io.github.ajacquierbret.kotlinphoenix.client.Message.ref","location":"kotlinphoenix-client/io.github.ajacquierbret.kotlinphoenix.client/-message/ref.html","searchKeys":["ref","val ref: String","io.github.ajacquierbret.kotlinphoenix.client.Message.ref"]},{"name":"val rejoinSteppedBackOff: (Int) -> Long","description":"io.github.ajacquierbret.kotlinphoenix.client.Defaults.rejoinSteppedBackOff","location":"kotlinphoenix-client/io.github.ajacquierbret.kotlinphoenix.client/-defaults/rejoin-stepped-back-off.html","searchKeys":["rejoinSteppedBackOff","val rejoinSteppedBackOff: (Int) -> Long","io.github.ajacquierbret.kotlinphoenix.client.Defaults.rejoinSteppedBackOff"]},{"name":"val response: Any?","description":"io.github.ajacquierbret.kotlinphoenix.client.SocketEvent.FailureEvent.response","location":"kotlinphoenix-client/io.github.ajacquierbret.kotlinphoenix.client/-socket-event/-failure-event/response.html","searchKeys":["response","val response: Any?","io.github.ajacquierbret.kotlinphoenix.client.SocketEvent.FailureEvent.response"]},{"name":"val status: String?","description":"io.github.ajacquierbret.kotlinphoenix.client.Message.status","location":"kotlinphoenix-client/io.github.ajacquierbret.kotlinphoenix.client/-message/status.html","searchKeys":["status","val status: String?","io.github.ajacquierbret.kotlinphoenix.client.Message.status"]},{"name":"val text: Message","description":"io.github.ajacquierbret.kotlinphoenix.client.SocketEvent.MessageEvent.text","location":"kotlinphoenix-client/io.github.ajacquierbret.kotlinphoenix.client/-socket-event/-message-event/text.html","searchKeys":["text","val text: Message","io.github.ajacquierbret.kotlinphoenix.client.SocketEvent.MessageEvent.text"]},{"name":"val throwable: Throwable","description":"io.github.ajacquierbret.kotlinphoenix.client.SocketEvent.FailureEvent.throwable","location":"kotlinphoenix-client/io.github.ajacquierbret.kotlinphoenix.client/-socket-event/-failure-event/throwable.html","searchKeys":["throwable","val throwable: Throwable","io.github.ajacquierbret.kotlinphoenix.client.SocketEvent.FailureEvent.throwable"]},{"name":"val topic: String","description":"io.github.ajacquierbret.kotlinphoenix.client.Channel.topic","location":"kotlinphoenix-client/io.github.ajacquierbret.kotlinphoenix.client/-channel/topic.html","searchKeys":["topic","val topic: String","io.github.ajacquierbret.kotlinphoenix.client.Channel.topic"]},{"name":"val topic: String","description":"io.github.ajacquierbret.kotlinphoenix.client.Message.topic","location":"kotlinphoenix-client/io.github.ajacquierbret.kotlinphoenix.client/-message/topic.html","searchKeys":["topic","val topic: String","io.github.ajacquierbret.kotlinphoenix.client.Message.topic"]},{"name":"val value: String","description":"io.github.ajacquierbret.kotlinphoenix.client.Channel.Event.value","location":"kotlinphoenix-client/io.github.ajacquierbret.kotlinphoenix.client/-channel/-event/value.html","searchKeys":["value","val value: String","io.github.ajacquierbret.kotlinphoenix.client.Channel.Event.value"]},{"name":"var joinRef: String?","description":"io.github.ajacquierbret.kotlinphoenix.client.Presence.joinRef","location":"kotlinphoenix-client/io.github.ajacquierbret.kotlinphoenix.client/-presence/join-ref.html","searchKeys":["joinRef","var joinRef: String?","io.github.ajacquierbret.kotlinphoenix.client.Presence.joinRef"]},{"name":"var logger: (String) -> Unit? = null","description":"io.github.ajacquierbret.kotlinphoenix.client.SocketCommon.logger","location":"kotlinphoenix-client/io.github.ajacquierbret.kotlinphoenix.client/-socket-common/logger.html","searchKeys":["logger","var logger: (String) -> Unit? = null","io.github.ajacquierbret.kotlinphoenix.client.SocketCommon.logger"]},{"name":"var onJoin: OnJoin","description":"io.github.ajacquierbret.kotlinphoenix.client.Presence.Caller.onJoin","location":"kotlinphoenix-client/io.github.ajacquierbret.kotlinphoenix.client/-presence/-caller/on-join.html","searchKeys":["onJoin","var onJoin: OnJoin","io.github.ajacquierbret.kotlinphoenix.client.Presence.Caller.onJoin"]},{"name":"var onLeave: OnLeave","description":"io.github.ajacquierbret.kotlinphoenix.client.Presence.Caller.onLeave","location":"kotlinphoenix-client/io.github.ajacquierbret.kotlinphoenix.client/-presence/-caller/on-leave.html","searchKeys":["onLeave","var onLeave: OnLeave","io.github.ajacquierbret.kotlinphoenix.client.Presence.Caller.onLeave"]},{"name":"var onSync: OnSync","description":"io.github.ajacquierbret.kotlinphoenix.client.Presence.Caller.onSync","location":"kotlinphoenix-client/io.github.ajacquierbret.kotlinphoenix.client/-presence/-caller/on-sync.html","searchKeys":["onSync","var onSync: OnSync","io.github.ajacquierbret.kotlinphoenix.client.Presence.Caller.onSync"]},{"name":"var params: Payload","description":"io.github.ajacquierbret.kotlinphoenix.client.Channel.params","location":"kotlinphoenix-client/io.github.ajacquierbret.kotlinphoenix.client/-channel/params.html","searchKeys":["params","var params: Payload","io.github.ajacquierbret.kotlinphoenix.client.Channel.params"]},{"name":"var payload: Payload","description":"io.github.ajacquierbret.kotlinphoenix.client.Push.payload","location":"kotlinphoenix-client/io.github.ajacquierbret.kotlinphoenix.client/-push/payload.html","searchKeys":["payload","var payload: Payload","io.github.ajacquierbret.kotlinphoenix.client.Push.payload"]},{"name":"var pendingDiffs: MutableList<PresenceDiff>","description":"io.github.ajacquierbret.kotlinphoenix.client.Presence.pendingDiffs","location":"kotlinphoenix-client/io.github.ajacquierbret.kotlinphoenix.client/-presence/pending-diffs.html","searchKeys":["pendingDiffs","var pendingDiffs: MutableList<PresenceDiff>","io.github.ajacquierbret.kotlinphoenix.client.Presence.pendingDiffs"]},{"name":"var reconnectAfterMs: (Int) -> Long","description":"io.github.ajacquierbret.kotlinphoenix.client.SocketCommon.reconnectAfterMs","location":"kotlinphoenix-client/io.github.ajacquierbret.kotlinphoenix.client/-socket-common/reconnect-after-ms.html","searchKeys":["reconnectAfterMs","var reconnectAfterMs: (Int) -> Long","io.github.ajacquierbret.kotlinphoenix.client.SocketCommon.reconnectAfterMs"]},{"name":"var rejoinAfterMs: (Int) -> Long","description":"io.github.ajacquierbret.kotlinphoenix.client.SocketCommon.rejoinAfterMs","location":"kotlinphoenix-client/io.github.ajacquierbret.kotlinphoenix.client/-socket-common/rejoin-after-ms.html","searchKeys":["rejoinAfterMs","var rejoinAfterMs: (Int) -> Long","io.github.ajacquierbret.kotlinphoenix.client.SocketCommon.rejoinAfterMs"]},{"name":"var state: PresenceState","description":"io.github.ajacquierbret.kotlinphoenix.client.Presence.state","location":"kotlinphoenix-client/io.github.ajacquierbret.kotlinphoenix.client/-presence/state.html","searchKeys":["state","var state: PresenceState","io.github.ajacquierbret.kotlinphoenix.client.Presence.state"]},{"name":"var timeout: Long","description":"io.github.ajacquierbret.kotlinphoenix.client.Push.timeout","location":"kotlinphoenix-client/io.github.ajacquierbret.kotlinphoenix.client/-push/timeout.html","searchKeys":["timeout","var timeout: Long","io.github.ajacquierbret.kotlinphoenix.client.Push.timeout"]},{"name":"var timeout: Long","description":"io.github.ajacquierbret.kotlinphoenix.client.SocketCommon.timeout","location":"kotlinphoenix-client/io.github.ajacquierbret.kotlinphoenix.client/-socket-common/timeout.html","searchKeys":["timeout","var timeout: Long","io.github.ajacquierbret.kotlinphoenix.client.SocketCommon.timeout"]},{"name":"class Builder","description":"io.github.ajacquierbret.kotlinphoenix.adapters.apollo.PhoenixNetworkTransport.Builder","location":"kotlinphoenix-adapters/io.github.ajacquierbret.kotlinphoenix.adapters.apollo/-phoenix-network-transport/-builder/index.html","searchKeys":["Builder","class Builder","io.github.ajacquierbret.kotlinphoenix.adapters.apollo.PhoenixNetworkTransport.Builder"]},{"name":"class PhoenixNetworkTransport : NetworkTransport","description":"io.github.ajacquierbret.kotlinphoenix.adapters.apollo.PhoenixNetworkTransport","location":"kotlinphoenix-adapters/io.github.ajacquierbret.kotlinphoenix.adapters.apollo/-phoenix-network-transport/index.html","searchKeys":["PhoenixNetworkTransport","class PhoenixNetworkTransport : NetworkTransport","io.github.ajacquierbret.kotlinphoenix.adapters.apollo.PhoenixNetworkTransport"]},{"name":"fun Builder()","description":"io.github.ajacquierbret.kotlinphoenix.adapters.apollo.PhoenixNetworkTransport.Builder.Builder","location":"kotlinphoenix-adapters/io.github.ajacquierbret.kotlinphoenix.adapters.apollo/-phoenix-network-transport/-builder/-builder.html","searchKeys":["Builder","fun Builder()","io.github.ajacquierbret.kotlinphoenix.adapters.apollo.PhoenixNetworkTransport.Builder.Builder"]},{"name":"fun build(): PhoenixNetworkTransport","description":"io.github.ajacquierbret.kotlinphoenix.adapters.apollo.PhoenixNetworkTransport.Builder.build","location":"kotlinphoenix-adapters/io.github.ajacquierbret.kotlinphoenix.adapters.apollo/-phoenix-network-transport/-builder/build.html","searchKeys":["build","fun build(): PhoenixNetworkTransport","io.github.ajacquierbret.kotlinphoenix.adapters.apollo.PhoenixNetworkTransport.Builder.build"]},{"name":"fun channelJoinTimeoutMs(channelJoinTimeoutMs: Long): PhoenixNetworkTransport.Builder","description":"io.github.ajacquierbret.kotlinphoenix.adapters.apollo.PhoenixNetworkTransport.Builder.channelJoinTimeoutMs","location":"kotlinphoenix-adapters/io.github.ajacquierbret.kotlinphoenix.adapters.apollo/-phoenix-network-transport/-builder/channel-join-timeout-ms.html","searchKeys":["channelJoinTimeoutMs","fun channelJoinTimeoutMs(channelJoinTimeoutMs: Long): PhoenixNetworkTransport.Builder","io.github.ajacquierbret.kotlinphoenix.adapters.apollo.PhoenixNetworkTransport.Builder.channelJoinTimeoutMs"]},{"name":"fun idleTimeoutMillis(idleTimeoutMillis: Long): PhoenixNetworkTransport.Builder","description":"io.github.ajacquierbret.kotlinphoenix.adapters.apollo.PhoenixNetworkTransport.Builder.idleTimeoutMillis","location":"kotlinphoenix-adapters/io.github.ajacquierbret.kotlinphoenix.adapters.apollo/-phoenix-network-transport/-builder/idle-timeout-millis.html","searchKeys":["idleTimeoutMillis","fun idleTimeoutMillis(idleTimeoutMillis: Long): PhoenixNetworkTransport.Builder","io.github.ajacquierbret.kotlinphoenix.adapters.apollo.PhoenixNetworkTransport.Builder.idleTimeoutMillis"]},{"name":"fun logger(logger: (log: Any) -> Unit?): PhoenixNetworkTransport.Builder","description":"io.github.ajacquierbret.kotlinphoenix.adapters.apollo.PhoenixNetworkTransport.Builder.logger","location":"kotlinphoenix-adapters/io.github.ajacquierbret.kotlinphoenix.adapters.apollo/-phoenix-network-transport/-builder/logger.html","searchKeys":["logger","fun logger(logger: (log: Any) -> Unit?): PhoenixNetworkTransport.Builder","io.github.ajacquierbret.kotlinphoenix.adapters.apollo.PhoenixNetworkTransport.Builder.logger"]},{"name":"fun params(params: Payload): PhoenixNetworkTransport.Builder","description":"io.github.ajacquierbret.kotlinphoenix.adapters.apollo.PhoenixNetworkTransport.Builder.params","location":"kotlinphoenix-adapters/io.github.ajacquierbret.kotlinphoenix.adapters.apollo/-phoenix-network-transport/-builder/params.html","searchKeys":["params","fun params(params: Payload): PhoenixNetworkTransport.Builder","io.github.ajacquierbret.kotlinphoenix.adapters.apollo.PhoenixNetworkTransport.Builder.params"]},{"name":"fun reconnectWhen(queueMessages: Boolean = true, reconnectWhen: (Throwable) -> Boolean?): PhoenixNetworkTransport.Builder","description":"io.github.ajacquierbret.kotlinphoenix.adapters.apollo.PhoenixNetworkTransport.Builder.reconnectWhen","location":"kotlinphoenix-adapters/io.github.ajacquierbret.kotlinphoenix.adapters.apollo/-phoenix-network-transport/-builder/reconnect-when.html","searchKeys":["reconnectWhen","fun reconnectWhen(queueMessages: Boolean = true, reconnectWhen: (Throwable) -> Boolean?): PhoenixNetworkTransport.Builder","io.github.ajacquierbret.kotlinphoenix.adapters.apollo.PhoenixNetworkTransport.Builder.reconnectWhen"]},{"name":"fun reconnectWith(reconnectWith: () -> Payload??): PhoenixNetworkTransport.Builder","description":"io.github.ajacquierbret.kotlinphoenix.adapters.apollo.PhoenixNetworkTransport.Builder.reconnectWith","location":"kotlinphoenix-adapters/io.github.ajacquierbret.kotlinphoenix.adapters.apollo/-phoenix-network-transport/-builder/reconnect-with.html","searchKeys":["reconnectWith","fun reconnectWith(reconnectWith: () -> Payload??): PhoenixNetworkTransport.Builder","io.github.ajacquierbret.kotlinphoenix.adapters.apollo.PhoenixNetworkTransport.Builder.reconnectWith"]},{"name":"fun serverUrl(serverUrl: String): PhoenixNetworkTransport.Builder","description":"io.github.ajacquierbret.kotlinphoenix.adapters.apollo.PhoenixNetworkTransport.Builder.serverUrl","location":"kotlinphoenix-adapters/io.github.ajacquierbret.kotlinphoenix.adapters.apollo/-phoenix-network-transport/-builder/server-url.html","searchKeys":["serverUrl","fun serverUrl(serverUrl: String): PhoenixNetworkTransport.Builder","io.github.ajacquierbret.kotlinphoenix.adapters.apollo.PhoenixNetworkTransport.Builder.serverUrl"]},{"name":"fun topic(topic: String): PhoenixNetworkTransport.Builder","description":"io.github.ajacquierbret.kotlinphoenix.adapters.apollo.PhoenixNetworkTransport.Builder.topic","location":"kotlinphoenix-adapters/io.github.ajacquierbret.kotlinphoenix.adapters.apollo/-phoenix-network-transport/-builder/topic.html","searchKeys":["topic","fun topic(topic: String): PhoenixNetworkTransport.Builder","io.github.ajacquierbret.kotlinphoenix.adapters.apollo.PhoenixNetworkTransport.Builder.topic"]},{"name":"open override fun <D : Operation.Data> execute(request: ApolloRequest<D>): Flow<ApolloResponse<D>>","description":"io.github.ajacquierbret.kotlinphoenix.adapters.apollo.PhoenixNetworkTransport.execute","location":"kotlinphoenix-adapters/io.github.ajacquierbret.kotlinphoenix.adapters.apollo/-phoenix-network-transport/execute.html","searchKeys":["execute","open override fun <D : Operation.Data> execute(request: ApolloRequest<D>): Flow<ApolloResponse<D>>","io.github.ajacquierbret.kotlinphoenix.adapters.apollo.PhoenixNetworkTransport.execute"]},{"name":"open override fun dispose()","description":"io.github.ajacquierbret.kotlinphoenix.adapters.apollo.PhoenixNetworkTransport.dispose","location":"kotlinphoenix-adapters/io.github.ajacquierbret.kotlinphoenix.adapters.apollo/-phoenix-network-transport/dispose.html","searchKeys":["dispose","open override fun dispose()","io.github.ajacquierbret.kotlinphoenix.adapters.apollo.PhoenixNetworkTransport.dispose"]},{"name":"suspend fun reconnect(scope: CoroutineScope, queueMessages: Boolean = true)","description":"io.github.ajacquierbret.kotlinphoenix.adapters.apollo.PhoenixNetworkTransport.reconnect","location":"kotlinphoenix-adapters/io.github.ajacquierbret.kotlinphoenix.adapters.apollo/-phoenix-network-transport/reconnect.html","searchKeys":["reconnect","suspend fun reconnect(scope: CoroutineScope, queueMessages: Boolean = true)","io.github.ajacquierbret.kotlinphoenix.adapters.apollo.PhoenixNetworkTransport.reconnect"]}]